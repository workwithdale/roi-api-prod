{  "openapi": "3.1.0",  "info": {    "title": "Restaurant ROI API",    "version": "1.0.0",    "description": "Endpoints for ROI questions and compute."  },  "servers": [    { "url": "https://roi-api-prod.vercel.app" }  ],  "paths": {    "/api/roi/questions": {      "post": {        "operationId": "getQuestions",        "summary": "Fetch 7 questions and session tokens",        "responses": {          "200": {            "description": "Questions payload",            "content": {              "application/json": {                "schema": {                  "type": "object",                  "properties": {                    "controllerVersion": { "type": "string" },                    "safeExecToken": { "type": "string" },                    "sessionToken": { "type": "string" },                    "presentKBs": { "type": "array", "items": { "type": "string" } },                    "questions": {                      "type": "array",                      "items": {                        "type": "object",                        "properties": {                          "idx": { "type": "integer" },                          "title": { "type": "string" },                          "why": { "type": ["string", "null"] },                          "prompt": { "type": ["string", "null"] },                          "tip": { "type": ["string", "null"] },                          "optionsHeader": { "type": "string" },                          "options": { "type": "array", "items": { "type": "string" } },                          "var": { "type": "string" },                          "range": { "type": "array", "items": { "type": "integer" }, "minItems": 2, "maxItems": 2 }                        },                        "required": ["idx","title","options","var","range"]                      }                    }                  },                  "required": ["sessionToken","safeExecToken","questions"]                }              }            }          }        }      }    },    "/api/roi/compute": {      "post": {        "operationId": "computeRoi",        "summary": "Compute ROI with selected options and tokens",        "requestBody": {          "required": true,          "content": {            "application/json": {              "schema": {                "type": "object",                "properties": {                  "selections": {                    "type": "object",                    "properties": {                      "a": { "type": "integer", "minimum": 1, "maximum": 10 },                      "b": { "type": "integer", "minimum": 1, "maximum": 10 },                      "g": { "type": "integer", "minimum": 1, "maximum": 7 },                      "PlanFee": { "type": "integer", "minimum": 1, "maximum": 4 },                      "L": { "type": "integer", "minimum": 1, "maximum": 10 },                      "n": { "type": "integer", "minimum": 1, "maximum": 8 },                      "d": { "type": "integer", "minimum": 1, "maximum": 7 }                    },                    "required": ["a","b","g","PlanFee","L","n","d"]                  },                  "sessionToken": { "type": "string" },                  "safeExecToken": { "type": "string" }                },                "required": ["selections","sessionToken","safeExecToken"]              },              "examples": {                "sample": {                  "value": {                    "selections": { "a": 6, "b": 4, "g": 3, "PlanFee": 2, "L": 4, "n": 5, "d": 3 },                    "sessionToken": "from-questions",                    "safeExecToken": "from-questions"                  }                }              }            }          }        },        "responses": {          "200": {            "description": "ROI results",            "content": {              "application/json": {                "schema": {                  "type": "object",                  "properties": {                    "markdown": {                      "type": "object",                      "properties": {                        "snapshot": { "type": "string" },                        "projection": { "type": "string" },                        "growth": { "type": "string" }                      },                      "required": ["snapshot","projection","growth"]                    },                    "numbers": {                      "type": "object",                      "properties": {                        "baseline": { "type": "integer" },                        "loyaltyGP": { "type": "integer" },                        "cohortGP": { "type": "integer" },                        "combinedNetM1": { "type": "integer" },                        "monthTable": { "type": "array", "items": {                          "type": "object",                          "properties": {                            "month": { "type": "integer" },                            "profit": { "type": "integer" },                            "cumulative": { "type": "integer" }                          },                          "required": ["month","profit","cumulative"]                        }},                        "cumulative": {                          "type": "object",                          "properties": {                            "m3": { "type": "integer" },                            "m6": { "type": "integer" },                            "m12": { "type": "integer" }                          },                          "required": ["m3","m6","m12"]                        }                      },                      "required": ["baseline","loyaltyGP","cohortGP","combinedNetM1","monthTable","cumulative"]                    },                    "provenance": {                      "type": "object",                      "properties": {                        "controllerVersion": { "type": "string" },                        "engineFingerprint": { "type": "string" },                        "controllerPermit": { "type": "string" },                        "safeExecToken": { "type": "string" }                      },                      "required": ["controllerVersion","engineFingerprint","controllerPermit","safeExecToken"]                    }                  },                  "required": ["markdown","numbers","provenance"]                }              }            }          }        }      }    }  }}